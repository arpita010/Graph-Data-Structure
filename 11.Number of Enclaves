class Solution {
    public int numEnclaves(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        boolean[][] vis=new boolean[n][m];
        for(boolean[] row:vis)
        Arrays.fill(row,false);
        for(int i=0;i<m;i++)
        {
            if(!vis[0][i]&&grid[0][i]==1)
            dfs(0,i,vis,grid);
            if(!vis[n-1][i]&&grid[n-1][i]==1)
            dfs(n-1,i,vis,grid);
        }
        for(int i=0;i<n;i++)
        {
            if(!vis[i][0]&&grid[i][0]==1)
            dfs(i,0,vis,grid);
            if(!vis[i][m-1]&&grid[i][m-1]==1)
            dfs(i,m-1,vis,grid);
        }
        int count=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(!vis[i][j]&&grid[i][j]==1)
                count++;
            }
        }
        return count;
    }
    private void dfs(int row,int col,boolean[][] vis,int[][] grid)
    {
        vis[row][col]=true;
        int dr[]={0,-1,0,1};
        int dc[]={1,0,-1,0};
        for(int i=0;i<4;i++)
        {
            int nr=row+dr[i];
            int nc=col+dc[i];
            if(nr>=0&&nr<grid.length&&nc>=0&&nc<grid[0].length&&grid[nr][nc]==1&&!vis[nr][nc])
            dfs(nr,nc,vis,grid);
        }
    }
}
