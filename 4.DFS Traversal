import java.util.ArrayList;
import java.util.*;
public class Solution {
    public static ArrayList<ArrayList<Integer>> depthFirstSearch(int v, int e, ArrayList<ArrayList<Integer>> edges) {
        // Write your code here.
        ArrayList<Integer>[] adj=new ArrayList[v];
        for(int i=0;i<v;i++)
        adj[i]=new ArrayList<Integer>();
        for(ArrayList<Integer> edge:edges)
        {
            adj[edge.get(0)].add(edge.get(1));
            adj[edge.get(1)].add(edge.get(0));
        }
        ArrayList<ArrayList<Integer>> dfs=new ArrayList<>();
        boolean[] vis=new boolean[v];
        Arrays.fill(vis,false);
        for(int i=0;i<v;i++)
        {
            if(!vis[i])
            {
                ArrayList<Integer> comp=new ArrayList<>();
                DFS(i,comp,vis,adj);
                dfs.add(comp);
            }
        }
        return dfs;
    }
    private static void DFS(int start,ArrayList<Integer> comp,boolean[] vis,ArrayList<Integer>[] adj)
    {
        vis[start]=true;
        comp.add(start);
        for(int n:adj[start])
        {
            if(!vis[n])
            {
                DFS(n,comp,vis,adj);
            }
        }
    }
}
