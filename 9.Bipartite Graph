import java.util.ArrayList;
import java.util.*;
public class Solution {

    public static boolean isGraphBirpatite(ArrayList<ArrayList<Integer>> edges) {
        int n=edges.size();
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        for(int i=0;i<n;i++)
        adj.add(new ArrayList<Integer>());
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(edges.get(i).get(j)==1)
                {
                    adj.get(i).add(j);
                    adj.get(j).add(i);
                }
            }
        }
        // o/1 color
        
        int[] color=new int[n];
        
        Arrays.fill(color,-1);
        for(int i=0;i<n;i++)
        {
            if(color[i]==-1)
            {
               if(!check(i,0,adj,color))return false;
            }
        }
        return true;
    }
    private static boolean check(int src,int newcolor,ArrayList<ArrayList<Integer>> adj,int color[])
    {
        color[src]=newcolor;
        for(int it:adj.get(src))
        {
            if(color[it]==-1)
            {
            if(!check(it,newcolor==0?1:0,adj,color))return false;
            }else if(color[it]==newcolor)return false;
        }
        return true;
    }



}
