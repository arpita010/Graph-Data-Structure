import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static ArrayList<Integer> topologicalSort(ArrayList<ArrayList<Integer>> edges, int v, int e) 
    {
        // Write your code here
        ArrayList<Integer> res=new ArrayList<>();
        Stack<Integer> stack=new Stack<>();
        boolean[] vis=new boolean[v];
        Arrays.fill(vis,false);
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        for(int i=0;i<v;i++)
        adj.add(new ArrayList<Integer>());
        for(ArrayList<Integer>edge:edges)
        {
            adj.get(edge.get(0)).add(edge.get(1));
        }
        for(int i=0;i<v;i++)
        {
            if(!vis[i])
            {
                dfs(i,adj,vis,stack);
            }
        }
        for(int i=0;i<v;i++)
        {
            res.add(stack.pop());
        }
        return res;
    }
    private static void dfs(int src,ArrayList<ArrayList<Integer>> adj,boolean[] vis,Stack<Integer> stack)
    {
        vis[src]=true;
        for(int it:adj.get(src))
        {
            if(!vis[it])
            {
                dfs(it,adj,vis,stack);
            }
        }
        stack.push(src);
    }
}
