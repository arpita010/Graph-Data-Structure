class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int[] result = new int[0];
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        for(int i=0;i<numCourses;i++)
        adj.add(new ArrayList<Integer>());
        int[] in=new int[numCourses];
        Arrays.fill(in,0);
        for(int i=0;i<prerequisites.length;i++)
        {
            adj.get(prerequisites[i][0]).add(prerequisites[i][1]);
            in[prerequisites[i][1]]++;
        }
        Queue<Integer> queue=new LinkedList<>();
        for(int i=0;i<numCourses;i++)
        {
            if(in[i]==0)queue.add(i);
        }

        if(queue.isEmpty())return result;
        ArrayList<Integer> res=new ArrayList<>();
        while(!queue.isEmpty())
        {
            int node=queue.remove();
            res.add(node);
            for(int it:adj.get(node))
            {
                in[it]--;
                if(in[it]==0)queue.add(it);
            }
        }
        if(res.size()!=numCourses)return result;
        result=new int[numCourses];
        Collections.reverse(res);
        for(int i=0;i<numCourses;i++)
        {
            result[i]=res.get(i);
        }
        return result;
    }
}
